一个python程序，根据一条原始DNA数据（全大写，计算index时也按这个参考序列来记录）来 模拟另一条DNA数据以及标准答案maf文件。

模拟数据上可能会发生结构变异：大片段的插入，大片段的删除，染色体内易位，重复，倒位以及组合
还有，小的插入，删除，替换

首先记录一个原始长度的tag数组来记录哪些位置已经发生变异了，就不再二次产生变异了，即保证每个位点只发生一种变异。

我想通过两个步骤来完成：
第一步： 通过原始数据从左往右随机生成结构变异，重复，倒位，重复的部分用小写表示(这样不会影响后续的index)，倒位只在本区间发生，也不会影响index。插入的话，插入一段小写DNA；删除的话，把原片段替换为>，同样效用按大写计数；易位的话即将当前位置换为>，换到的位置片段小写；

第二步： 将以上所有变异情况转为两个子操作，替换或者插入，对原串操作。

第三步： 这样上述的所有变异都可以用参考序列的index记录下来。然后将模拟数据组装出来，删除>，将simulate的indexB和参考序列的index对应上。

输入可以留一些变异发生的概率和长度的接口

产生随机位点(或区间)思路：将 列表 以0分为多个列表，然后 看每个列表长度如果小于x（假设x=5），则舍弃，在长度每个大于等于x的列表中取【0：-x】重新组成一个大列表，然后从这里面随机选一个值，即为长度为x的区间起点，而且肯定能保证区间中不包含0。重新组成的大列表为空的话，则返回-1，表示无法找到长为x的区间

